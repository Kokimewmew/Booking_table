# Generated by Django 5.1.1 on 2024-09-17 23:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название ресторана')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание ресторана')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес ресторана')),
                ('contact_info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Контактная информация ресторана')),
            ],
            options={
                'verbose_name': 'Ресторан',
                'verbose_name_plural': 'Рестораны',
            },
        ),
        migrations.CreateModel(
            name='RestaurantTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=50, verbose_name='Имя сотрудника')),
                ('position', models.CharField(max_length=50, verbose_name='Должность ')),
                ('photo', models.ImageField(upload_to='booking/employee_photos/', verbose_name='Фото сотрудника')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер стола')),
                ('seats', models.IntegerField(verbose_name='Количество мест')),
                ('availability', models.BooleanField(verbose_name='Доступность')),
            ],
            options={
                'verbose_name': 'Стол',
                'verbose_name_plural': 'Столы',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(verbose_name='Дата и время бронирования')),
                ('end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время окончания бронирования')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Гость забронировавший стол')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.table', verbose_name='Стол')),
            ],
            options={
                'verbose_name': 'Бронирование',
                'verbose_name_plural': 'Бронирование',
            },
        ),
        migrations.CreateModel(
            name='ReservationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, verbose_name='Статус бронирования')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.reservation', verbose_name='Бронирование')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Гость забронировавший стол')),
            ],
            options={
                'verbose_name': 'История бронирований',
                'verbose_name_plural': 'Истории бронирований',
            },
        ),
    ]
